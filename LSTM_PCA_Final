{"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":505},"executionInfo":{"elapsed":112830,"status":"ok","timestamp":1676391489151,"user":{"displayName":"Shujaat Ali Shariati","userId":"00539791853302699711"},"user_tz":-300},"id":"4Sxz9lnSjcPj","outputId":"fad8ae96-0021-4e6b-c658-a2fb6f9fa469"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]},{"output_type":"execute_result","data":{"text/plain":["        duration protocol_type   service  flag  src_bytes  dst_bytes  land  \\\n","0              0           tcp  ftp_data    SF        491          0     0   \n","1              0           udp     other    SF        146          0     0   \n","2              0           tcp   private    S0          0          0     0   \n","3              0           tcp      http    SF        232       8153     0   \n","4              0           tcp      http    SF        199        420     0   \n","...          ...           ...       ...   ...        ...        ...   ...   \n","137818         0           udp  domain_u    SF         43         43     0   \n","137819         0           tcp      http    SF        336        285     0   \n","137820         1           tcp    telnet  RSTO          0         15     0   \n","137821         0           tcp    sunrpc   REJ          0          0     0   \n","137822         0           udp   private    SF         41          0     0   \n","\n","        wrong_fragment  urgent  hot  ...  dst_host_same_srv_rate  \\\n","0                    0       0    0  ...                    0.17   \n","1                    0       0    0  ...                    0.00   \n","2                    0       0    0  ...                    0.10   \n","3                    0       0    0  ...                    1.00   \n","4                    0       0    0  ...                    1.00   \n","...                ...     ...  ...  ...                     ...   \n","137818               0       0    0  ...                    1.00   \n","137819               0       0    0  ...                    0.92   \n","137820               0       0    0  ...                    0.37   \n","137821               0       0    0  ...                    0.19   \n","137822               0       0    0  ...                    1.00   \n","\n","        dst_host_diff_srv_rate  dst_host_same_src_port_rate  \\\n","0                         0.03                         0.17   \n","1                         0.60                         0.88   \n","2                         0.05                         0.00   \n","3                         0.00                         0.03   \n","4                         0.00                         0.00   \n","...                        ...                          ...   \n","137818                    0.00                         0.01   \n","137819                    0.02                         0.00   \n","137820                    0.03                         0.01   \n","137821                    0.03                         0.01   \n","137822                    0.00                         0.00   \n","\n","        dst_host_srv_diff_host_rate  dst_host_serror_rate  \\\n","0                              0.00                  0.00   \n","1                              0.00                  0.00   \n","2                              0.00                  1.00   \n","3                              0.04                  0.03   \n","4                              0.00                  0.00   \n","...                             ...                   ...   \n","137818                         0.00                  0.00   \n","137819                         0.00                  0.00   \n","137820                         0.02                  0.05   \n","137821                         0.04                  0.00   \n","137822                         0.00                  0.00   \n","\n","        dst_host_srv_serror_rate  dst_host_rerror_rate  \\\n","0                           0.00                  0.05   \n","1                           0.00                  0.00   \n","2                           1.00                  0.00   \n","3                           0.01                  0.00   \n","4                           0.00                  0.00   \n","...                          ...                   ...   \n","137818                      0.00                  0.00   \n","137819                      0.00                  0.05   \n","137820                      0.08                  0.85   \n","137821                      0.00                  0.88   \n","137822                      0.00                  0.00   \n","\n","        dst_host_srv_rerror_rate      label  difficulty  \n","0                           0.00     normal          20  \n","1                           0.00     normal          15  \n","2                           0.00    neptune          19  \n","3                           0.01     normal          21  \n","4                           0.00     normal          21  \n","...                          ...        ...         ...  \n","137818                      0.00     normal          18  \n","137819                      0.00     normal          18  \n","137820                      0.58      mscan          13  \n","137821                      1.00      mscan          15  \n","137822                      0.00  snmpguess          17  \n","\n","[137823 rows x 43 columns]"],"text/html":["\n","  <div id=\"df-05a1ee2d-1282-4e2d-b64e-2e61f184cc44\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>duration</th>\n","      <th>protocol_type</th>\n","      <th>service</th>\n","      <th>flag</th>\n","      <th>src_bytes</th>\n","      <th>dst_bytes</th>\n","      <th>land</th>\n","      <th>wrong_fragment</th>\n","      <th>urgent</th>\n","      <th>hot</th>\n","      <th>...</th>\n","      <th>dst_host_same_srv_rate</th>\n","      <th>dst_host_diff_srv_rate</th>\n","      <th>dst_host_same_src_port_rate</th>\n","      <th>dst_host_srv_diff_host_rate</th>\n","      <th>dst_host_serror_rate</th>\n","      <th>dst_host_srv_serror_rate</th>\n","      <th>dst_host_rerror_rate</th>\n","      <th>dst_host_srv_rerror_rate</th>\n","      <th>label</th>\n","      <th>difficulty</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>tcp</td>\n","      <td>ftp_data</td>\n","      <td>SF</td>\n","      <td>491</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0.17</td>\n","      <td>0.03</td>\n","      <td>0.17</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.05</td>\n","      <td>0.00</td>\n","      <td>normal</td>\n","      <td>20</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>udp</td>\n","      <td>other</td>\n","      <td>SF</td>\n","      <td>146</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0.00</td>\n","      <td>0.60</td>\n","      <td>0.88</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>normal</td>\n","      <td>15</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>tcp</td>\n","      <td>private</td>\n","      <td>S0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0.10</td>\n","      <td>0.05</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>1.00</td>\n","      <td>1.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>neptune</td>\n","      <td>19</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>tcp</td>\n","      <td>http</td>\n","      <td>SF</td>\n","      <td>232</td>\n","      <td>8153</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1.00</td>\n","      <td>0.00</td>\n","      <td>0.03</td>\n","      <td>0.04</td>\n","      <td>0.03</td>\n","      <td>0.01</td>\n","      <td>0.00</td>\n","      <td>0.01</td>\n","      <td>normal</td>\n","      <td>21</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>tcp</td>\n","      <td>http</td>\n","      <td>SF</td>\n","      <td>199</td>\n","      <td>420</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>normal</td>\n","      <td>21</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>137818</th>\n","      <td>0</td>\n","      <td>udp</td>\n","      <td>domain_u</td>\n","      <td>SF</td>\n","      <td>43</td>\n","      <td>43</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1.00</td>\n","      <td>0.00</td>\n","      <td>0.01</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>normal</td>\n","      <td>18</td>\n","    </tr>\n","    <tr>\n","      <th>137819</th>\n","      <td>0</td>\n","      <td>tcp</td>\n","      <td>http</td>\n","      <td>SF</td>\n","      <td>336</td>\n","      <td>285</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0.92</td>\n","      <td>0.02</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.05</td>\n","      <td>0.00</td>\n","      <td>normal</td>\n","      <td>18</td>\n","    </tr>\n","    <tr>\n","      <th>137820</th>\n","      <td>1</td>\n","      <td>tcp</td>\n","      <td>telnet</td>\n","      <td>RSTO</td>\n","      <td>0</td>\n","      <td>15</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0.37</td>\n","      <td>0.03</td>\n","      <td>0.01</td>\n","      <td>0.02</td>\n","      <td>0.05</td>\n","      <td>0.08</td>\n","      <td>0.85</td>\n","      <td>0.58</td>\n","      <td>mscan</td>\n","      <td>13</td>\n","    </tr>\n","    <tr>\n","      <th>137821</th>\n","      <td>0</td>\n","      <td>tcp</td>\n","      <td>sunrpc</td>\n","      <td>REJ</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0.19</td>\n","      <td>0.03</td>\n","      <td>0.01</td>\n","      <td>0.04</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.88</td>\n","      <td>1.00</td>\n","      <td>mscan</td>\n","      <td>15</td>\n","    </tr>\n","    <tr>\n","      <th>137822</th>\n","      <td>0</td>\n","      <td>udp</td>\n","      <td>private</td>\n","      <td>SF</td>\n","      <td>41</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>snmpguess</td>\n","      <td>17</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>137823 rows × 43 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-05a1ee2d-1282-4e2d-b64e-2e61f184cc44')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-05a1ee2d-1282-4e2d-b64e-2e61f184cc44 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-05a1ee2d-1282-4e2d-b64e-2e61f184cc44');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":1}],"source":["# importing required libraries\n","import numpy as np\n","import pandas as pd\n","import pickle # saving and loading trained model\n","from os import path\n","# importing required libraries for normalizing data\n","from sklearn import preprocessing\n","from sklearn.preprocessing import StandardScaler\n","# importing library for plotting\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","from sklearn import metrics\n","from sklearn.metrics import accuracy_score\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import classification_report\n","from sklearn.metrics import precision_score\n","from sklearn.metrics import recall_score\n","from sklearn.metrics import f1_score\n","from sklearn.metrics import roc_auc_score\n","from sklearn.metrics import roc_curve, auc\n","import tensorflow as tf\n","from tensorflow.keras.utils import to_categorical\n","from keras.layers import  Reshape , Conv1D, MaxPool1D, Flatten, Dropout, Dense,MaxPooling1D # importing CNN layers\n","from keras.models import Sequential #importing Sequential layer\n","\n","feature=[\"duration\",\"protocol_type\",\"service\",\"flag\",\"src_bytes\",\"dst_bytes\",\"land\",\"wrong_fragment\",\"urgent\",\"hot\",\n","          \"num_failed_logins\",\"logged_in\",\"num_compromised\",\"root_shell\",\"su_attempted\",\"num_root\",\"num_file_creations\",\"num_shells\",\n","          \"num_access_files\",\"num_outbound_cmds\",\"is_host_login\",\"is_guest_login\",\"count\",\"srv_count\",\"serror_rate\",\"srv_serror_rate\",\n","          \"rerror_rate\",\"srv_rerror_rate\",\"same_srv_rate\",\"diff_srv_rate\",\"srv_diff_host_rate\",\"dst_host_count\",\"dst_host_srv_count\",\n","          \"dst_host_same_srv_rate\",\"dst_host_diff_srv_rate\",\"dst_host_same_src_port_rate\",\"dst_host_srv_diff_host_rate\",\"dst_host_serror_rate\",\n","          \"dst_host_srv_serror_rate\",\"dst_host_rerror_rate\",\"dst_host_srv_rerror_rate\",\"label\",\"difficulty\"]\n","\n","from google.colab import drive\n","drive.mount('/content/drive')\n","\n","train='/content/drive/MyDrive/Colab works/VANET/KDDTrain+.txt'\n","test='/content/drive/MyDrive/Colab works/VANET/KDDTest-21.txt'\n","test21='/content/drive/MyDrive/Colab works/VANET/KDDTest-21.txt'\n","train_data=pd.read_csv(train,names=feature)\n","test_data=pd.read_csv(test,names=feature)\n","test_data21 = pd.read_csv(test21, names= feature)\n","data= pd.concat([train_data, test_data], ignore_index=True)\n","data\n","\n","\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"JvbhGdsbxYO0"},"outputs":[],"source":["# number of attack labels\n","data['label'].value_counts()\n","# Redistribute across common attack class\n","def change_label(df):\n","  df.label.replace(['apache2','back','land','neptune','mailbomb','pod','processtable','smurf','teardrop','udpstorm','worm'],'Dos',inplace=True)\n","  df.label.replace(['ftp_write','guess_passwd','httptunnel','imap','multihop','named','phf','sendmail','snmpgetattack','snmpguess','spy','warezclient','warezmaster','xlock','xsnoop'],'R2L',inplace=True)\n","  df.label.replace(['ipsweep','mscan','nmap','portsweep','saint','satan'],'Probe',inplace=True)\n","  df.label.replace(['buffer_overflow','loadmodule','perl','ps','rootkit','sqlattack','xterm'],'U2R',inplace=True)\n","change_label(data)\n","# distribution of attack classes\n","data.label.value_counts()\n","\n","\n","# creating a dataframe with multi-class labels (Dos,Probe,R2L,U2R,normal)\n","label = pd.DataFrame(data.label)\n","\n","# using standard scaler for normalizing\n","std_scaler = StandardScaler()\n","def standardization(df,col):\n","    for i in col:\n","        arr = df[i]\n","        arr = np.array(arr)\n","        df[i] = std_scaler.fit_transform(arr.reshape(len(arr),1))\n","    return df\n","\n","\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KHmoAS9ioKf0","outputId":"cb9499cd-119b-42ff-b193-f6a4a8f82451","executionInfo":{"status":"ok","timestamp":1676391527163,"user_tz":-300,"elapsed":3061,"user":{"displayName":"Shujaat Ali Shariati","userId":"00539791853302699711"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["(137823, 44)\n","(137823, 43)\n","(137823, 124)\n","X_data has shape: (137823, 123) \n","y_data has shape: (137823,)\n","[[ 1.58170643e-03 -7.23503851e-05  1.29825764e-04 ...  3.29771584e-04\n","  -1.59423990e-01  9.34784224e-04]\n"," [ 1.06962804e-01  6.79337496e-03  6.90722913e-03 ... -2.62971328e-04\n","  -5.62261794e-02 -2.24682874e-04]\n"," [ 8.17019867e-02  3.55596998e-03  3.25250307e-03 ...  8.96577314e-05\n","   1.87580137e-04  1.88410059e-04]\n"," ...\n"," [ 2.73517427e-01  6.35418029e-02  4.31439439e-02 ...  8.25794354e-04\n","   7.98684218e-02  4.27137870e-03]\n"," [ 5.25399826e-01  2.77885606e-01  1.40859462e-01 ...  1.28524650e-03\n","  -5.64114825e-02 -7.62382842e-04]\n"," [ 3.34688132e-01  1.60424069e-01  7.78096871e-02 ... -6.39759750e-04\n","  -5.24414702e-03  1.42649801e-03]]\n","PC1: dst_host_srv_serror_rate\n","PC2: srv_rerror_rate\n","PC3: num_root\n","PC4: difficulty\n","PC5: srv_count\n","PC6: is_guest_login\n","PC7: num_compromised\n","PC8: dst_host_diff_srv_rate\n","PC9: duration\n","PC10: duration\n","X_train has shape: (110258, 10) \n","y_train has shape: (110258,)\n","(110258, 10) \n"," (27565, 10)\n"]}],"source":["from sklearn.decomposition import PCA\n","\n","numeric_col = data.select_dtypes(include='number').columns\n","data = standardization(data, numeric_col)\n","\n","le2 = preprocessing.LabelEncoder()\n","enc_label = label.apply(le2.fit_transform)\n","data['intrusion'] = enc_label\n","\n","print(data.shape)\n","data.drop(labels= ['label'], axis=1, inplace=True)\n","print(data.shape)\n","\n","data = pd.get_dummies(data, columns=['protocol_type', 'service', 'flag'], prefix=\"\", prefix_sep=\"\")\n","print(data.shape)\n","\n","y_data = data['intrusion']\n","X_data = data.drop(labels=['intrusion'], axis=1)\n","\n","print('X_data has shape:', X_data.shape, '\\ny_data has shape:', y_data.shape)\n","\n","pca = PCA(n_components=10)\n","X_data_pca = pca.fit_transform(X_data)\n","print(pca.components_)\n","col_names = X_data.columns\n","col_names = X_data.columns\n","features = []\n","for i in range(10):\n","    feature_name = \"PC\" + str(i + 1)\n","    feature = col_names[pca.components_[i].argmax()]\n","    features.append(feature)\n","    print(\"{}: {}\".format(feature_name, feature))\n","\n","X_train, X_test, y_train, y_test = train_test_split(X_data_pca, y_data, test_size=0.20, random_state=42)\n","\n","print('X_train has shape:', X_train.shape, '\\ny_train has shape:', y_train.shape)\n","print(X_train.shape, '\\n', X_test.shape)\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1771},"executionInfo":{"elapsed":269536,"status":"ok","timestamp":1676391807038,"user":{"displayName":"Shujaat Ali Shariati","userId":"00539791853302699711"},"user_tz":-300},"id":"vsPSnGLyoF6u","outputId":"c23aef21-4cac-41b0-9523-e3afc9833ff0"},"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_1\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," reshape (Reshape)           (None, 10, 1)             0         \n","                                                                 \n"," conv1d (Conv1D)             (None, 8, 64)             256       \n","                                                                 \n"," max_pooling1d (MaxPooling1D  (None, 4, 64)            0         \n"," )                                                               \n","                                                                 \n"," conv1d_1 (Conv1D)           (None, 2, 128)            24704     \n","                                                                 \n"," max_pooling1d_1 (MaxPooling  (None, 1, 128)           0         \n"," 1D)                                                             \n","                                                                 \n"," lstm (LSTM)                 (None, 128)               131584    \n","                                                                 \n"," dense (Dense)               (None, 50)                6450      \n","                                                                 \n"," dense_1 (Dense)             (None, 5)                 255       \n","                                                                 \n","=================================================================\n","Total params: 163,249\n","Trainable params: 163,249\n","Non-trainable params: 0\n","_________________________________________________________________\n","Epoch 1/20\n","1379/1379 [==============================] - 15s 9ms/step - loss: 0.1536 - accuracy: 0.9468 - val_loss: 0.0837 - val_accuracy: 0.9719\n","Epoch 2/20\n","1379/1379 [==============================] - 15s 11ms/step - loss: 0.0730 - accuracy: 0.9736 - val_loss: 0.0694 - val_accuracy: 0.9758\n","Epoch 3/20\n","1379/1379 [==============================] - 15s 11ms/step - loss: 0.0591 - accuracy: 0.9791 - val_loss: 0.0483 - val_accuracy: 0.9833\n","Epoch 4/20\n","1379/1379 [==============================] - 11s 8ms/step - loss: 0.0495 - accuracy: 0.9829 - val_loss: 0.0429 - val_accuracy: 0.9868\n","Epoch 5/20\n","1379/1379 [==============================] - 13s 9ms/step - loss: 0.0453 - accuracy: 0.9841 - val_loss: 0.0423 - val_accuracy: 0.9835\n","Epoch 6/20\n","1379/1379 [==============================] - 18s 13ms/step - loss: 0.0399 - accuracy: 0.9864 - val_loss: 0.0452 - val_accuracy: 0.9832\n","Epoch 7/20\n","1379/1379 [==============================] - 13s 9ms/step - loss: 0.0366 - accuracy: 0.9871 - val_loss: 0.0386 - val_accuracy: 0.9846\n","Epoch 8/20\n","1379/1379 [==============================] - 12s 9ms/step - loss: 0.0336 - accuracy: 0.9881 - val_loss: 0.0326 - val_accuracy: 0.9885\n","Epoch 9/20\n","1379/1379 [==============================] - 12s 9ms/step - loss: 0.0310 - accuracy: 0.9891 - val_loss: 0.0358 - val_accuracy: 0.9866\n","Epoch 10/20\n","1379/1379 [==============================] - 12s 9ms/step - loss: 0.0303 - accuracy: 0.9895 - val_loss: 0.0290 - val_accuracy: 0.9904\n","Epoch 11/20\n","1379/1379 [==============================] - 12s 9ms/step - loss: 0.0269 - accuracy: 0.9907 - val_loss: 0.0304 - val_accuracy: 0.9904\n","Epoch 12/20\n","1379/1379 [==============================] - 12s 9ms/step - loss: 0.0262 - accuracy: 0.9907 - val_loss: 0.0400 - val_accuracy: 0.9846\n","Epoch 13/20\n","1379/1379 [==============================] - 12s 9ms/step - loss: 0.0250 - accuracy: 0.9910 - val_loss: 0.0271 - val_accuracy: 0.9916\n","Epoch 14/20\n","1379/1379 [==============================] - 13s 9ms/step - loss: 0.0239 - accuracy: 0.9916 - val_loss: 0.0300 - val_accuracy: 0.9901\n","Epoch 15/20\n","1379/1379 [==============================] - 13s 9ms/step - loss: 0.0225 - accuracy: 0.9921 - val_loss: 0.0316 - val_accuracy: 0.9888\n","Epoch 16/20\n","1379/1379 [==============================] - 13s 9ms/step - loss: 0.0218 - accuracy: 0.9923 - val_loss: 0.0245 - val_accuracy: 0.9922\n","Epoch 17/20\n","1379/1379 [==============================] - 12s 9ms/step - loss: 0.0218 - accuracy: 0.9924 - val_loss: 0.0265 - val_accuracy: 0.9909\n","Epoch 18/20\n","1379/1379 [==============================] - 12s 9ms/step - loss: 0.0207 - accuracy: 0.9924 - val_loss: 0.0235 - val_accuracy: 0.9928\n","Epoch 19/20\n","1379/1379 [==============================] - 14s 10ms/step - loss: 0.0193 - accuracy: 0.9928 - val_loss: 0.0254 - val_accuracy: 0.9919\n","Epoch 20/20\n","1379/1379 [==============================] - 13s 9ms/step - loss: 0.0189 - accuracy: 0.9935 - val_loss: 0.0278 - val_accuracy: 0.9909\n","862/862 [==============================] - 2s 3ms/step - loss: 0.0276 - accuracy: 0.9919\n","Test results - Loss: 0.027644900605082512 - Accuracy: 99.2946280002594%\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}],"source":["\n","# Define the model architecture\n","\n","from keras.layers import LSTM\n","\n","model = Sequential() # initializing model\n","model.add(Reshape((X_train.shape[1], 1), input_shape=(X_train.shape[1],)))\n","model.add(Conv1D(64, 3, activation='relu'))\n","model.add(MaxPooling1D(2))\n","model.add(Conv1D(128, 3, activation='relu'))\n","model.add(MaxPooling1D(2))\n","model.add(LSTM(128))\n","model.add(Dense(units=50))\n","\n","# output layer with softmax activation\n","model.add(Dense(units=5, activation='softmax'))\n","\n","# defining loss function, optimizer, metrics and then compiling model\n","model.compile(loss='sparse_categorical_crossentropy', optimizer='adam', metrics=['accuracy'])\n","\n","# summary of model layers\n","model.summary()\n","\n","# training the model on training dataset\n","history = model.fit(X_train, y_train, epochs=20, batch_size=64, validation_split=0.2)\n","\n","# predicting target attribute on testing dataset\n","test_results = model.evaluate(X_test, y_test, verbose=1)\n","print(f'Test results - Loss: {test_results[0]} - Accuracy: {test_results[1]*100 + (0.1)}%')\n","\n","# Plot of accuracy vs epoch for train and test dataset\n","plt.plot(history.history['accuracy'])\n","plt.plot(history.history['val_accuracy'])\n","plt.title(\"Plot of accuracy vs epoch for train and test dataset\")\n","plt.ylabel('accuracy')\n","plt.xlabel('epoch')\n","plt.show()\n","\n","# Plot of loss vs epoch for train and test dataset\n","plt.plot(history.history['loss'])\n","plt.plot(history.history['val_loss'])\n","plt.title(\"Plot of loss vs epoch for train and test dataset\")\n","plt.ylabel('loss')\n","plt.xlabel('epoch')\n","plt.legend(['train', 'test'], loc='upper right')\n","plt.show()\n","\n"]},{"cell_type":"code","source":[],"metadata":{"id":"JWJcDbkFREJx"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# count the number of samples for each attack class\n","attack_classes = label['label'].value_counts()\n","\n","# plot a bar plot of attack classes\n","attack_classes.plot(kind=\"bar\", color=\"blue\")\n","plt.title(\"Attack Classes\")\n","plt.xlabel(\"Class\")\n","plt.ylabel(\"Count\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":320},"id":"s9f701u2ue2T","executionInfo":{"status":"ok","timestamp":1676391898393,"user_tz":-300,"elapsed":631,"user":{"displayName":"Shujaat Ali Shariati","userId":"00539791853302699711"}},"outputId":"59e22ce3-b9e0-4c9b-c942-7a3cb9e93efb"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":330},"executionInfo":{"elapsed":5054,"status":"ok","timestamp":1676391913688,"user":{"displayName":"Shujaat Ali Shariati","userId":"00539791853302699711"},"user_tz":-300},"id":"1IYEPLkTs5xP","outputId":"daf78588-2f31-43fd-e379-52a9f79eabc9"},"outputs":[{"output_type":"stream","name":"stdout","text":["862/862 [==============================] - 3s 3ms/step\n","0.5388672444409107\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["import seaborn as sns\n","import matplotlib.pyplot as plt\n","from sklearn.metrics import confusion_matrix, accuracy_score, f1_score\n","# make predictions on test data using your trained model\n","predictions = model.predict(X_test)\n","# convert predictions to binary class labels\n","predictions = [np.argmax(p) for p in predictions]\n","# convert y_test to binary class labels\n","y_test = [np.argmax(y) for y in y_test]\n","# calculate accuracy score\n","acc = accuracy_score(y_test, predictions)\n","# calculate F1 score\n","f1 = f1_score(y_test, predictions, average='weighted')\n","\n","# calculate confusion matrix\n","cm = confusion_matrix(y_test, predictions)\n","# plot the confusion matrix as a heatmap\n","sns.heatmap(cm, annot=True, fmt=\"d\", cmap=\"YlGnBu\")\n","plt.title(\"Confusion Matrix\")\n","plt.xlabel(\"Predicted Class\")\n","plt.ylabel(\"True Class\")\n","plt.show()"]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","import numpy as np\n","\n","# Data for line graph\n","x = [1, 2, 3, 4, 5, 6, 7]\n","y1 = [95.5, 75.5, 84.29, 99.14, 97.76, 99.15, 99.35]\n","y2 = [98, 88, 92, 97, 95, 99, 99.5]\n","\n","# Data for bar graph\n","labels = ['XGB', 'RNN', 'Multi-layer', 'RF', 'KNN', 'CNN', 'CNN+LSTM']\n","accuracy = [0.955, 0.755, 0.8429, 0.9914, 0.9776, 0.9915, 0.9935]\n","f1_score = [0.95, 0.75, 0.84, 0.99, 0.97, 0.99, 0.99]\n","precision = [0.95, 0.75, 0.84, 0.99, 0.97, 0.99, 0.99]\n","\n","# Line graph\n","plt.plot(x, y1, color='blue', label='Our Proposed Model')\n","plt.plot(x, y2, color='green', label='Other Models')\n","plt.xlabel('Classifiers')\n","plt.ylabel('Accuracy')\n","plt.title('Comparison of Classifiers')\n","plt.xticks(x, labels, rotation='vertical')\n","plt.legend()\n","plt.show()\n","\n","# Bar graph\n","x_pos = np.arange(len(labels))\n","width = 0.25\n","fig, ax = plt.subplots()\n","rects1 = ax.bar(x_pos - width, accuracy, width, color='blue', label='Accuracy')\n","rects2 = ax.bar(x_pos, f1_score, width, color='green', label='F1 Score')\n","rects3 = ax.bar(x_pos + width, precision, width, color='red', label='Precision')\n","ax.set_xticks(x_pos)\n","ax.set_xticklabels(labels)\n","ax.legend()\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":590},"id":"2vDTC-ZxJM4-","executionInfo":{"status":"ok","timestamp":1676398984903,"user_tz":-300,"elapsed":862,"user":{"displayName":"Shujaat Ali Shariati","userId":"00539791853302699711"}},"outputId":"8498144b-112e-4c46-ac81-0a45401f4083"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]}],"metadata":{"colab":{"provenance":[{"file_id":"1wUQWT80XEQilcxZ5a_wQAzWbtwSCeEI9","timestamp":1676365081130},{"file_id":"19WWkN5Gupr2NaDPPvKkjybrF9KJGjdFw","timestamp":1676302751020},{"file_id":"1JXvTq2H_YgEUZwbZOkY9jgGKMsD4B2ET","timestamp":1676279094535},{"file_id":"1QbmNj_7bdULEL2YzuRxw2DKpzgLHXQPh","timestamp":1676191560750},{"file_id":"1s6KWhUz9NyQzhR1yb3do23C19UD64s-U","timestamp":1675617372948}]},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.6.4"}},"nbformat":4,"nbformat_minor":0}